"use strict";

(async function () {
  try {
    var dataApi = await fetch("https://api.punkapi.com/v2/beers");
    var beers = await dataApi.json();
    var $beerList = document.querySelector(".beer-list");
    console.log(beers);

    var data = [];
    beers.map(function (v) {
      var yearArr = v.first_brewed.split("/");
      var dataObj = {};
      dataObj.name = v.name;
      dataObj.image_url = v.image_url;
      dataObj.id = v.id;
      dataObj.year = yearArr[1];
      dataObj.tagline = v.tagline;
      data.push(dataObj);
    });

    var template = document.querySelector("#beers-template").textContent;
    var render = Handlebars.compile(template);
    var html = render(data);
    $beerList.innerHTML = html;
    document.querySelector("#preloader").style.display = "none";
    clickHandler();
  } catch (e) {
    console.error(e);
  }
})();

function clickHandler() {
  document.querySelector(".beer-list").addEventListener("click", function (e) {
    e.preventDefault();
    var currentId = void 0;
    currentId = e.target.dataset.id ? e.target.dataset.id : e.target.parentNode.dataset.id;
    getBeer(currentId);
  });
  async function getBeer(currentId) {
    try {
      document.querySelector("#preloader").style.position = "fixed";
      document.querySelector("#preloader").style.display = "initial";
      var dataApi = await fetch("https://api.punkapi.com/v2/beers/" + currentId);
      var beerData = await dataApi.json();
      var $beerDialog = document.querySelector("#beer-dialog");

      var beer = {};
      beer.id = beerData[0].id;
      beer.name = beerData[0].name;
      beer.image_url = beerData[0].image_url;
      beer.first_brewed = beerData[0].first_brewed;
      beer.tagline = beerData[0].tagline;
      beer.description = beerData[0].description;
      beer.boil_volume = beerData[0].boil_volume;
      beer.food_pairing = beerData[0].food_pairing;

      var template = document.querySelector("#beer-template").textContent;
      var render = Handlebars.compile(template);
      var html = render(beer);
      $beerDialog.innerHTML = html;
      document.querySelector("#preloader").style.display = "none";
      $beerDialog.style.display = "block";
    } catch (e) {
      console.error(e);
    }
  }
}
"use strict";

jQuery(function ($) {
  $(".beer").on("click", ".beer-dialog__close", function () {
    console.log("ds");
    $("#beer-dialog").fadeOut();
  });
});
"use strict";

function searchName() {
  var input, filter, ul, li, a, i;
  input = document.querySelector(".search");
  filter = input.value.toUpperCase();
  ul = document.querySelector(".beer-list");
  li = document.querySelectorAll(".beer-item");
  var newss = Array.from(li);
  a = li[0].dataset.name;
  for (i = 0; i < li.length; i++) {
    a = li[i].dataset.name;
    if (a.toUpperCase().indexOf(filter) > -1) {
      li[i].style.display = "";
    } else {
      li[i].style.display = "none";
    }
  }
}

document.querySelector(".search").addEventListener("keyup", searchName);
"use strict";

jQuery(function ($) {
  var $beerList = $(".beer-list");
  var $sortId = $(".sort__link-id");
  var $sortName = $(".sort__link-name");
  var $sortYear = $(".sort__link-year");
  var beerItem = ".beer-item";

  $sortId.on("click", function (e) {
    if (e.target.dataset.order === "asc") {
      $beerList.find(".beer-item").sort(function (a, b) {
        return +a.dataset.id - +b.dataset.id;
      }).appendTo($beerList);
    } else {
      $beerList.find(".beer-item").sort(function (a, b) {
        return +b.dataset.id - +a.dataset.id;
      }).appendTo($beerList);
    }
    e.target.dataset.order = e.target.dataset.order === "asc" ? "desc" : "asc";
  });

  $sortYear.on("click", function (e) {
    if (e.target.dataset.order === "asc") {
      $beerList.find(beerItem).sort(function (a, b) {
        return +a.dataset.year - +b.dataset.year;
      }).appendTo($beerList);
    } else {
      $beerList.find(beerItem).sort(function (a, b) {
        return +b.dataset.year - +a.dataset.year;
      }).appendTo($beerList);
    }
    e.target.dataset.order = e.target.dataset.order === "asc" ? "desc" : "asc";
  });

  $sortName.on("click", function (e) {
    if (e.target.dataset.order === "asc") {
      $beerList.find(beerItem).sort(function (a, b) {
        if (a.dataset.name < b.dataset.name) return -1;
        if (a.dataset.name > b.dataset.name) return 1;
        return 0;
      }).appendTo($beerList);
    } else {
      $beerList.find(beerItem).sort(function (a, b) {
        if (b.dataset.name < a.dataset.name) return -1;
        if (b.dataset.name > a.dataset.name) return 1;
        return 0;
      }).appendTo($beerList);
    }
    e.target.dataset.order = e.target.dataset.order === "asc" ? "desc" : "asc";
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
